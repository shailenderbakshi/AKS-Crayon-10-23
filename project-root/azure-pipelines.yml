trigger:
  branches:
    include:
      - main

variables:
  - group: 'AKS-Credentials'
  - name: RESOURCE_GROUP
    value: 'my-resource-group2'
  - name: AKS_CLUSTER_NAME
    value: 'my-aks-cluster2'

stages:
  - stage: Deploy
    jobs:
      - job: Deploy_Prometheus_Grafana_Kubecost
        displayName: "Deploy Prometheus, Grafana, and Kubecost"
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - script: |
              # Install Helm if not available
              curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            displayName: "Install Helm"

          - script: |
              # Install kubectl and kubelogin for AAD integration with AKS
              az aks install-cli
            displayName: "Install kubectl and kubelogin"

          - script: |
              # Login to Azure using Service Principal and set subscription context
              az login --service-principal \
                --username $(AZURE_CLIENT_ID) \
                --password $(AZURE_CLIENT_SECRET) \
                --tenant $(AZURE_TENANT_ID)

              # Set the subscription context using the subscription ID from the variable group
              az account set --subscription $(AZURE_SUBSCRIPTION_ID)

              # Get AKS credentials, using kubelogin for AAD
              az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_CLUSTER_NAME) --admin
            displayName: "Azure CLI Login, Set Subscription, and Get AKS Credentials"

          - script: |
              # Add Helm repositories
              helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
              helm repo add grafana https://grafana.github.io/helm-charts
              helm repo add kubecost https://kubecost.github.io/cost-analyzer/
              helm repo update
            displayName: "Add Helm Repositories"

          - script: |
              # Create namespace if it doesn't exist
              kubectl create namespace monitoring || true
            displayName: "Create Namespace"

          - script: |
              # Deploy Prometheus using the values file
              helm install prometheus prometheus-community/prometheus --namespace monitoring -f project-root/helm/prometheus/values-prometheus.yaml
            displayName: "Deploy Prometheus"

          - script: |
              # Deploy Grafana using the values file
              helm install grafana grafana/grafana --namespace monitoring -f project-root/helm/grafana/values-grafana.yaml \
                --set service.type=LoadBalancer
            displayName: "Deploy Grafana"

          - script: |
              # Deploy Kubecost for cost monitoring in the monitoring namespace
              helm install kubecost kubecost/cost-analyzer --namespace monitoring --set kubecostToken="your_kubecost_token" \
                --set service.type=LoadBalancer
            displayName: "Deploy Kubecost"

          - script: |
              # Display Grafana and Kubecost service details
              kubectl get svc --namespace monitoring -o wide
            displayName: "Get Service Details"
