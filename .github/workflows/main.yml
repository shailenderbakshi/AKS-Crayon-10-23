name: Terraform Pipeline

# Trigger the workflow only on pushes to the 'main' branch
on:
  push:
    branches:
      - main  # You can modify this as needed

jobs:
  terraform:
    runs-on: ubuntu-latest  # Use the latest Ubuntu image for the workflow

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to Azure using the service principal stored in GitHub Secrets
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Install Terraform (using hashicorp/setup-terraform action)
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Specify the version of Terraform

      # Step 4: Initialize Terraform with backend configuration (updated storage account name)
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=myStorageResourceGroup" \
            -backend-config="storage_account_name=terracount0203" \  # Updated storage account name
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"
        working-directory: terraform-project  # Ensure this points to where your Terraform configs are

      # Step 5: Run Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan -var-file=env/dev.tfvars -out=tfplan
        working-directory: terraform-project  # Ensure this points to where your Terraform configs are

      # Step 6: Apply Terraform changes
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan
        working-directory: terraform-project  # Ensure this points to where your Terraform configs are
