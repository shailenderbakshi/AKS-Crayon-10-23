trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Install Terraform
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '1.5.0'

# Initialize Terraform with backend configuration
- task: Terraform@3
  inputs:
    command: 'init'
    backendServiceArm: 'Shail-Conn'
    backendAzureRmResourceGroupName: 'myStorageResourceGroup'
    backendAzureRmStorageAccountName: 'terracount02'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'
    workingDirectory: $(System.DefaultWorkingDirectory)

# Run Terraform Plan
- task: Terraform@3
  inputs:
    command: 'plan'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'Shail-Conn'
    commandOptions: '-var-file=env/dev.tfvars -out=tfplan'

# Apply Terraform changes
- task: Terraform@3
  inputs:
    command: 'apply'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceNameAzureRM: 'Shail-Conn'
    commandOptions: '-auto-approve tfplan'
