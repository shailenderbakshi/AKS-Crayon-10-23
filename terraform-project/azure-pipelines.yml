trigger:
  branches:
    include:
      - none

pool:
  vmImage: 'ubuntu-latest'

steps:
# Step 1: Install Terraform
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '1.5.0'

# Step 2: Initialize Terraform (no backend needed here, itâ€™s in provider.tf)
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(System.DefaultWorkingDirectory)

# Step 3: Terraform Plan
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceName: 'Shail-Conn' # Reference to Azure service connection
    commandOptions: '-var-file=env/dev.tfvars -out=tfplan'

# Step 4: Terraform Apply
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: $(System.DefaultWorkingDirectory)
    environmentServiceName: 'Shail-Conn' # Reference to Azure service connection
    commandOptions: '-auto-approve tfplan'
