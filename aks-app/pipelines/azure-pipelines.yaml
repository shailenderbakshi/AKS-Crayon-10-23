trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  acrName: 'notts01'                    # Replace with your actual ACR name
  imageRepository: 'aks-app'            # Name of the repository in ACR
  clientId: 'a8594772-7771-44e6-b951-196a1f362afd'          # Service Principal Client ID
  clientSecret: 'kuk8Q~j9A-Jxr6KuBRuwYURM4v2UktscYwEKKaLS'  # Service Principal Client Secret
  tenantId: '08cca906-e7b9-4edf-b88a-37c7efbc1422'          # Tenant ID for the Service Principal

stages:
- stage: Build
  displayName: 'Build and Push to ACR'
  jobs:
  - job: BuildAndPush
    displayName: 'Build Docker image and push to ACR'
    steps:
    - script: |
        az login --service-principal -u $(clientId) -p $(clientSecret) --tenant $(tenantId)
        az acr login --name $(acrName)
        
        # Build the Docker image using the Dockerfile in /docker and the app code in /src
        docker build -f docker/Dockerfile -t $(acrName).azurecr.io/$(imageRepository):$(Build.BuildId) ./src
        
        # List images to confirm that the image was built
        docker images
      displayName: 'Build Docker Image'
      env:
        clientId: $(clientId)
        clientSecret: $(clientSecret)
        tenantId: $(tenantId)
      
    - script: |
        # Push the Docker image to ACR
        docker push $(acrName).azurecr.io/$(imageRepository):$(Build.BuildId)
      displayName: 'Push Docker Image to ACR'
      condition: succeeded()  # Only push if the build step succeeds
